/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, December 27, 2016 at 4:56:00 PM Japan Standard Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSProtocolChecker, NSString;

@interface IMLocalObject : NSObject {

	id _internal;

}

@property (assign,nonatomic) id target; 
@property (nonatomic,readonly) NSProtocolChecker * protocolChecker; 
@property (nonatomic,readonly) NSString * portName; 
@property (nonatomic,retain) NSString * processName; 
@property (nonatomic,readonly) NSObject*<OS_xpc_object> connection; 
@property (nonatomic,readonly) BOOL isValid; 
@property (nonatomic,readonly) BOOL forceSecureCoding; 
+(void)initialize;
+(void)_registerIMLocalObject:(id)arg1 ;
+(void)_unregisterIMLocalObject:(id)arg1 ;
+(id)_imLocalObjectQueue;
+(void)_setExceptionHandlingDisabled:(BOOL)arg1 ;
+(id)_registeredIMLocalObjectForPort:(unsigned)arg1 ;
-(void)setProcessName:(NSString *)arg1 ;
-(id)initWithTarget:(id)arg1 protocol:(id)arg2 ;
-(void)dealloc;
-(id)description;
-(void)invalidate;
-(BOOL)isValid;
-(void)setTarget:(id)arg1 ;
-(id)target;
-(NSString *)processName;
-(NSObject*<OS_xpc_object>)connection;
-(NSProtocolChecker *)protocolChecker;
-(void)_portDidBecomeInvalid;
-(void)_portInterrupted;
-(BOOL)forceSecureCoding;
-(void)_enqueueInvocation:(id)arg1 ;
-(id)initWithTarget:(id)arg1 portName:(id)arg2 protocol:(id)arg3 ;
-(id)initWithTarget:(id)arg1 connection:(id)arg2 protocol:(id)arg3 forceSecureCoding:(BOOL)arg4 ;
-(void)_handleNewInvocations;
-(void)_cancelHandlerCompleted;
-(void)_clearPort:(BOOL)arg1 ;
-(BOOL)isValidSelector:(SEL)arg1 ;
-(void)terminated;
-(BOOL)_handleInvocation:(id)arg1 ;
-(id)_peekInvocation;
-(void)_popInvocation;
-(BOOL)handleInvocation:(id)arg1 ;
-(void)_noteNewInvocation;
-(void)_enqueueInvocation:(id)arg1 xpcMessage:(id)arg2 ;
-(void)_enqueueInvocationWithPriority:(id)arg1 xpcMessage:(id)arg2 priority:(int)arg3 ;
-(void)_handleInvocationForSendMessage:(id)arg1 ;
-(void)_systemShutdown:(id)arg1 ;
-(void)_enqueueInvocationWithPriority:(id)arg1 priority:(int)arg2 ;
-(id)initWithTarget:(id)arg1 connection:(id)arg2 protocol:(id)arg3 forceSecureCoding:(BOOL)arg4 offMainThread:(BOOL)arg5 ;
-(id)_currentMessageContext;
-(void)setPortName:(NSString *)arg1 ;
-(id)initWithTarget:(id)arg1 connection:(id)arg2 protocol:(id)arg3 ;
-(NSString *)portName;
@end

